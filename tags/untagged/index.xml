<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>untagged on zhangzw</title>
    <link>https://www.ngirl.xyz/tags/untagged/</link>
    <description>Recent content in untagged on zhangzw</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hans</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 27 Jan 2021 18:13:13 +0800</lastBuildDate><atom:link href="https://www.ngirl.xyz/tags/untagged/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker部署jira8全家桶破解</title>
      <link>https://www.ngirl.xyz/posts/65-docker%E9%83%A8%E7%BD%B2jira8%E5%85%A8%E5%AE%B6%E6%A1%B6%E7%A0%B4%E8%A7%A3/</link>
      <pubDate>Wed, 27 Jan 2021 18:13:13 +0800</pubDate>
      
      <guid>https://www.ngirl.xyz/posts/65-docker%E9%83%A8%E7%BD%B2jira8%E5%85%A8%E5%AE%B6%E6%A1%B6%E7%A0%B4%E8%A7%A3/</guid>
      <description>参考文档
   通过atlassian-agent.jar全家桶破解: https://www.cnblogs.com/zhmiao/p/10620903.html
  通过altassian-agent.jar全家桶破解插件(超详细 推荐): https://www.dqzboy.com/atlassian全家桶以及插件破解详细教程
  通过自己覆盖jar包的方式: https://www.cnblogs.com/tchua/p/10862670.html
  atlassian-agent.jar官方下载: https://gitee.com/pengzhile/atlassian-agent/releases/v1.2.3
   说明 1. atlassian-agent.jar版本: v1.2.3 2. 通过docker swarm 部署 3. jira版本为: 8.1.0 4. mysql版本: 5.7.24  安装mysql步骤 编写 docker-compose.yml version:&amp;#39;3&amp;#39;services:mysql:image:xxx.com/mysql:5.7.24volumes:- /data/container/jira8-mysql/data/:/var/lib/mysql:rw- /data/container/jira8-mysql/etc-mysql:/etc/mysql:rwdeploy:replicas:1resources:limits:cpus:&amp;#39;2&amp;#39;memory:4Genvironment:MYSQL_ROOT_PASSWORD:&amp;#34;root默认密码&amp;#34;ports:- &amp;#34;13336:3306&amp;#34;networks:- jira8networks:jira8:按照jira的mysql5.7配置参数要求配置以下 #etc-mysql 是从mysql5.7内cp下来的, 方便后续直接修改, 挂载到本地 #/data/container/jira8-mysql/etc-mysql/conf.d/docker.cnf [mysqld] skip-host-cache skip-name-resolve character_set_server=utf8mb4 innodb_default_row_format=DYNAMIC default-storage-engine=INNODB innodb_large_prefix=ON innodb_file_format=Barracuda innodb_log_file_size=2G sql_mode = NO_AUTO_VALUE_ON_ZERO docker swarm启动 mysql cd /data/container/jira8-mysql docker stack deploy -c docker-compose.</description>
    </item>
    
    <item>
      <title>Gin学习 Validator</title>
      <link>https://www.ngirl.xyz/golang/gin%E5%AD%A6%E4%B9%A0-validator/</link>
      <pubDate>Tue, 12 Jan 2021 10:17:46 +0800</pubDate>
      
      <guid>https://www.ngirl.xyz/golang/gin%E5%AD%A6%E4%B9%A0-validator/</guid>
      <description>&lt;p&gt;记录一下Gin学习验证器和翻译器模块&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Google资深工程师深度讲解Go语言 Elastic简单使用</title>
      <link>https://www.ngirl.xyz/golang/google%E8%B5%84%E6%B7%B1%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%B7%B1%E5%BA%A6%E8%AE%B2%E8%A7%A3go%E8%AF%AD%E8%A8%80-elastic%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 06 Jan 2021 14:27:27 +0800</pubDate>
      
      <guid>https://www.ngirl.xyz/golang/google%E8%B5%84%E6%B7%B1%E5%B7%A5%E7%A8%8B%E5%B8%88%E6%B7%B1%E5%BA%A6%E8%AE%B2%E8%A7%A3go%E8%AF%AD%E8%A8%80-elastic%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Gitlab-Ce的https开启问题</title>
      <link>https://www.ngirl.xyz/posts/63-gitlab-ce%E7%9A%84https%E5%BC%80%E5%90%AF%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 15 Dec 2020 11:15:52 +0800</pubDate>
      
      <guid>https://www.ngirl.xyz/posts/63-gitlab-ce%E7%9A%84https%E5%BC%80%E5%90%AF%E9%97%AE%E9%A2%98/</guid>
      <description>前言
 首先需要开启https并不会因为之前没有开启, 之前已经是https访问, 通过nginx反向代理到gitlab-ce:10080端口
但是由于新版Chrome浏览器对于https的域名内部post调用http时 会提示不安全
这种情况下才准备将gitlab直接通过https启动, 然后nginx反代到https的gitlab-ce上
首先修改下gitlab.rb  external_url &#39;https://gitlab.xxx.com&#39; nginx[&#39;redirect_http_to_https&#39;] = true nginx[&#39;redirect_http_to_https_port&#39;] = 80 nginx[&#39;listen_port&#39;] = 80 nginx[&#39;ssl_certificate&#39;] = &amp;quot;/etc/gitlab/ssl/server.pem&amp;quot; nginx[&#39;ssl_certificate_key&#39;] = &amp;quot;/etc/gitlab/ssl/server.key&amp;quot;  这里有个插曲, 因为我之前配置的时候docker 端口映射是10080:10080, 所以容器的gitlab.rb配置是这样:
  nginx[&#39;redirect_http_to_https_port&#39;] = 10080 nginx[&#39;listen_port&#39;] = 10080 这样就导致开启https的redirect 可能有点问题(可能漏改, 或者某些默认配置的问题), 其实没必要, 目前改成容器内默认的80
然后reconfigure即可 gitlab-ctl reconfigure 由于我是docker swarm启动 version:&amp;#34;3&amp;#34;services:gitlab:image:hub.xxx.com/bq/gitlab-ce:11.5.4hostname:&amp;#39;gitlab.xxx.com&amp;#39;environment:TZ:&amp;#39;Asia/Shanghai&amp;#39;GITLAB_OMNIBUS_CONFIG:|gitlab_rails[&amp;#39;time_zone&amp;#39;] = &amp;#39;Asia/Shanghai&amp;#39;volumes:- /data/container/gitlab-ce/logs:/var/log/gitlab- /data/container/gitlab-ce/data/:/var/opt/gitlab:rw- /data/container/gitlab-ce/config/:/etc/gitlab:rwdeploy:replicas:1restart_policy:condition:on-failureports:- 10443:443- 10080:80- 10022:22networks:- gitlabnetenvironment:HOSTNAME:gitlab.xxx.comnetworks:gitlabnet:nginx代理修改 server { listen 80; listen 443 ssl http2; charset utf-8; server_name gitlab.</description>
    </item>
    
    <item>
      <title>Goland快捷键记录</title>
      <link>https://www.ngirl.xyz/posts/60-goland%E5%BF%AB%E6%8D%B7%E9%94%AE%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Tue, 20 Oct 2020 16:42:57 +0800</pubDate>
      
      <guid>https://www.ngirl.xyz/posts/60-goland%E5%BF%AB%E6%8D%B7%E9%94%AE%E8%AE%B0%E5%BD%95/</guid>
      <description>1. 记录一些常见的goland快捷键(mac) 1. command + alt + ← | → // 回退|前进 到上次浏览的位置  2. command d | x // 复制行 |删除行  3. command b = command + 单击 // 快速打开光标处的类或方法  4. command alt l // 重新格式化代码  5. 代码折叠和展开 - command shift + / - // 代码全部展开 / 折叠 (项目所有go文件全部展开/折叠) - command alt + / - // 代码递归展开 / 折叠 (所选内容行内全部展开/折叠) - command + / - // 代码展开 / 折叠 (所选内容展开/折叠)  6.</description>
    </item>
    
  </channel>
</rss>
